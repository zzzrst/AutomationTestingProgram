### YamlMime:ManagedReference
items:
- uid: AutomationTestingProgram.TestSetExecutionSummaryReport
  commentId: T:AutomationTestingProgram.TestSetExecutionSummaryReport
  id: TestSetExecutionSummaryReport
  parent: AutomationTestingProgram
  children:
  - AutomationTestingProgram.TestSetExecutionSummaryReport.#ctor
  - AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport(System.Collections.Generic.List{AutomationTestingProgram.TestCaseHTML},System.Collections.Generic.Dictionary{System.String,System.String})
  - AutomationTestingProgram.TestSetExecutionSummaryReport.TestSet
  langs:
  - csharp
  - vb
  name: TestSetExecutionSummaryReport
  nameWithType: TestSetExecutionSummaryReport
  fullName: AutomationTestingProgram.TestSetExecutionSummaryReport
  type: Class
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/HTMLReporter/TestSetExecutionSummaryReport.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: TestSetExecutionSummaryReport
    path: src/AutomationFramework/Loggers_and_Reporters/HTMLReporter/TestSetExecutionSummaryReport.cs
    startLine: 18
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram
  summary: "\nTestSetExecutionSummaryReport : Used to store information and generate the HTML Report.\n"
  example: []
  syntax:
    content: public class TestSetExecutionSummaryReport
    content.vb: Public Class TestSetExecutionSummaryReport
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutomationTestingProgram.TestSetExecutionSummaryReport.#ctor
  commentId: M:AutomationTestingProgram.TestSetExecutionSummaryReport.#ctor
  id: '#ctor'
  parent: AutomationTestingProgram.TestSetExecutionSummaryReport
  langs:
  - csharp
  - vb
  name: TestSetExecutionSummaryReport()
  nameWithType: TestSetExecutionSummaryReport.TestSetExecutionSummaryReport()
  fullName: AutomationTestingProgram.TestSetExecutionSummaryReport.TestSetExecutionSummaryReport()
  type: Constructor
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/HTMLReporter/TestSetExecutionSummaryReport.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: .ctor
    path: src/AutomationFramework/Loggers_and_Reporters/HTMLReporter/TestSetExecutionSummaryReport.cs
    startLine: 29
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram
  summary: "\nInitializes a new instance of the <xref href=\"AutomationTestingProgram.TestSetExecutionSummaryReport\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TestSetExecutionSummaryReport()
    content.vb: Public Sub New
  overload: AutomationTestingProgram.TestSetExecutionSummaryReport.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestSetExecutionSummaryReport.TestSet
  commentId: P:AutomationTestingProgram.TestSetExecutionSummaryReport.TestSet
  id: TestSet
  parent: AutomationTestingProgram.TestSetExecutionSummaryReport
  langs:
  - csharp
  - vb
  name: TestSet
  nameWithType: TestSetExecutionSummaryReport.TestSet
  fullName: AutomationTestingProgram.TestSetExecutionSummaryReport.TestSet
  type: Property
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/HTMLReporter/TestSetExecutionSummaryReport.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: TestSet
    path: src/AutomationFramework/Loggers_and_Reporters/HTMLReporter/TestSetExecutionSummaryReport.cs
    startLine: 36
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram
  summary: "\nGets or sets the connector used to get the test set.\n"
  example: []
  syntax:
    content: public TestSetHTMLInstance TestSet { get; set; }
    parameters: []
    return:
      type: AutomationTestingProgram.TestSetHTMLInstance
    content.vb: Public Property TestSet As TestSetHTMLInstance
  overload: AutomationTestingProgram.TestSetExecutionSummaryReport.TestSet*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport(System.Collections.Generic.List{AutomationTestingProgram.TestCaseHTML},System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport(System.Collections.Generic.List{AutomationTestingProgram.TestCaseHTML},System.Collections.Generic.Dictionary{System.String,System.String})
  id: GenerateHTMLReport(System.Collections.Generic.List{AutomationTestingProgram.TestCaseHTML},System.Collections.Generic.Dictionary{System.String,System.String})
  parent: AutomationTestingProgram.TestSetExecutionSummaryReport
  langs:
  - csharp
  - vb
  name: GenerateHTMLReport(List<TestCaseHTML>, Dictionary<String, String>)
  nameWithType: TestSetExecutionSummaryReport.GenerateHTMLReport(List<TestCaseHTML>, Dictionary<String, String>)
  fullName: AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport(System.Collections.Generic.List<AutomationTestingProgram.TestCaseHTML>, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/HTMLReporter/TestSetExecutionSummaryReport.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: GenerateHTMLReport
    path: src/AutomationFramework/Loggers_and_Reporters/HTMLReporter/TestSetExecutionSummaryReport.cs
    startLine: 42
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram
  summary: "\nGenerates the appropriate HTML Report.\n"
  example: []
  syntax:
    content: public string GenerateHTMLReport(List<TestCaseHTML> testCaseResults, Dictionary<string, string> testSetDetails)
    parameters:
    - id: testCaseResults
      type: System.Collections.Generic.List{AutomationTestingProgram.TestCaseHTML}
    - id: testSetDetails
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: System.String
      description: HTML report.
    content.vb: Public Function GenerateHTMLReport(testCaseResults As List(Of TestCaseHTML), testSetDetails As Dictionary(Of String, String)) As String
  overload: AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport*
  nameWithType.vb: TestSetExecutionSummaryReport.GenerateHTMLReport(List(Of TestCaseHTML), Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport(System.Collections.Generic.List(Of AutomationTestingProgram.TestCaseHTML), System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: GenerateHTMLReport(List(Of TestCaseHTML), Dictionary(Of String, String))
references:
- uid: AutomationTestingProgram
  commentId: N:AutomationTestingProgram
  name: AutomationTestingProgram
  nameWithType: AutomationTestingProgram
  fullName: AutomationTestingProgram
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutomationTestingProgram.TestSetExecutionSummaryReport
  commentId: T:AutomationTestingProgram.TestSetExecutionSummaryReport
  name: TestSetExecutionSummaryReport
  nameWithType: TestSetExecutionSummaryReport
  fullName: AutomationTestingProgram.TestSetExecutionSummaryReport
- uid: AutomationTestingProgram.TestSetExecutionSummaryReport.#ctor*
  commentId: Overload:AutomationTestingProgram.TestSetExecutionSummaryReport.#ctor
  name: TestSetExecutionSummaryReport
  nameWithType: TestSetExecutionSummaryReport.TestSetExecutionSummaryReport
  fullName: AutomationTestingProgram.TestSetExecutionSummaryReport.TestSetExecutionSummaryReport
- uid: AutomationTestingProgram.TestSetExecutionSummaryReport.TestSet*
  commentId: Overload:AutomationTestingProgram.TestSetExecutionSummaryReport.TestSet
  name: TestSet
  nameWithType: TestSetExecutionSummaryReport.TestSet
  fullName: AutomationTestingProgram.TestSetExecutionSummaryReport.TestSet
- uid: AutomationTestingProgram.TestSetHTMLInstance
  commentId: T:AutomationTestingProgram.TestSetHTMLInstance
  parent: AutomationTestingProgram
  name: TestSetHTMLInstance
  nameWithType: TestSetHTMLInstance
  fullName: AutomationTestingProgram.TestSetHTMLInstance
- uid: AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport*
  commentId: Overload:AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport
  name: GenerateHTMLReport
  nameWithType: TestSetExecutionSummaryReport.GenerateHTMLReport
  fullName: AutomationTestingProgram.TestSetExecutionSummaryReport.GenerateHTMLReport
- uid: System.Collections.Generic.List{AutomationTestingProgram.TestCaseHTML}
  commentId: T:System.Collections.Generic.List{AutomationTestingProgram.TestCaseHTML}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TestCaseHTML>
  nameWithType: List<TestCaseHTML>
  fullName: System.Collections.Generic.List<AutomationTestingProgram.TestCaseHTML>
  nameWithType.vb: List(Of TestCaseHTML)
  fullName.vb: System.Collections.Generic.List(Of AutomationTestingProgram.TestCaseHTML)
  name.vb: List(Of TestCaseHTML)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutomationTestingProgram.TestCaseHTML
    name: TestCaseHTML
    nameWithType: TestCaseHTML
    fullName: AutomationTestingProgram.TestCaseHTML
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutomationTestingProgram.TestCaseHTML
    name: TestCaseHTML
    nameWithType: TestCaseHTML
    fullName: AutomationTestingProgram.TestCaseHTML
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
