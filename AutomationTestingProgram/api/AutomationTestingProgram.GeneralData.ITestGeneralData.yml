### YamlMime:ManagedReference
items:
- uid: AutomationTestingProgram.GeneralData.ITestGeneralData
  commentId: T:AutomationTestingProgram.GeneralData.ITestGeneralData
  id: ITestGeneralData
  parent: AutomationTestingProgram.GeneralData
  children:
  - AutomationTestingProgram.GeneralData.ITestGeneralData.Name
  - AutomationTestingProgram.GeneralData.ITestGeneralData.ParseParameters(System.String,System.String)
  - AutomationTestingProgram.GeneralData.ITestGeneralData.Verify(System.String)
  langs:
  - csharp
  - vb
  name: ITestGeneralData
  nameWithType: ITestGeneralData
  fullName: AutomationTestingProgram.GeneralData.ITestGeneralData
  type: Interface
  source:
    remote:
      path: AutomationTestingProgram/src/GeneralData/ITestGeneralData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: ITestGeneralData
    path: src/GeneralData/ITestGeneralData.cs
    startLine: 14
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.GeneralData
  summary: "\nGeneral data regarding the test data type. This should be ran once at the beginning and never used again.\n"
  example: []
  syntax:
    content: public interface ITestGeneralData
    content.vb: Public Interface ITestGeneralData
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: AutomationTestingProgram.GeneralData.ITestGeneralData.Name
  commentId: P:AutomationTestingProgram.GeneralData.ITestGeneralData.Name
  id: Name
  parent: AutomationTestingProgram.GeneralData.ITestGeneralData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ITestGeneralData.Name
  fullName: AutomationTestingProgram.GeneralData.ITestGeneralData.Name
  type: Property
  source:
    remote:
      path: AutomationTestingProgram/src/GeneralData/ITestGeneralData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: Name
    path: src/GeneralData/ITestGeneralData.cs
    startLine: 19
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.GeneralData
  summary: "\nGets the name to be used when being identifed by the reflective getter.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: AutomationTestingProgram.GeneralData.ITestGeneralData.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: AutomationTestingProgram.GeneralData.ITestGeneralData.Verify(System.String)
  commentId: M:AutomationTestingProgram.GeneralData.ITestGeneralData.Verify(System.String)
  id: Verify(System.String)
  parent: AutomationTestingProgram.GeneralData.ITestGeneralData
  langs:
  - csharp
  - vb
  name: Verify(String)
  nameWithType: ITestGeneralData.Verify(String)
  fullName: AutomationTestingProgram.GeneralData.ITestGeneralData.Verify(System.String)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/GeneralData/ITestGeneralData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: Verify
    path: src/GeneralData/ITestGeneralData.cs
    startLine: 27
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.GeneralData
  summary: "\nVerifys if the argument is valid. The arguments are\nOften File location, so this checks if the file is valid.\n"
  example: []
  syntax:
    content: bool Verify(string testArgs)
    parameters:
    - id: testArgs
      type: System.String
      description: Test Arguments.
    return:
      type: System.Boolean
      description: True if valid.
    content.vb: Function Verify(testArgs As String) As Boolean
  overload: AutomationTestingProgram.GeneralData.ITestGeneralData.Verify*
- uid: AutomationTestingProgram.GeneralData.ITestGeneralData.ParseParameters(System.String,System.String)
  commentId: M:AutomationTestingProgram.GeneralData.ITestGeneralData.ParseParameters(System.String,System.String)
  id: ParseParameters(System.String,System.String)
  parent: AutomationTestingProgram.GeneralData.ITestGeneralData
  langs:
  - csharp
  - vb
  name: ParseParameters(String, String)
  nameWithType: ITestGeneralData.ParseParameters(String, String)
  fullName: AutomationTestingProgram.GeneralData.ITestGeneralData.ParseParameters(System.String, System.String)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/GeneralData/ITestGeneralData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: ParseParameters
    path: src/GeneralData/ITestGeneralData.cs
    startLine: 37
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.GeneralData
  summary: "\nParses the parameters in the given testArgs.\nGets parameters such as enviornment, url, etc.\nOnly runs for the test set args.\n"
  example: []
  syntax:
    content: Dictionary<InformationObject.EnvVar, string> ParseParameters(string testArgs, string dataFile)
    parameters:
    - id: testArgs
      type: System.String
      description: Test Arguments.
    - id: dataFile
      type: System.String
      description: The location of the datafile if any.
    return:
      type: System.Collections.Generic.Dictionary{AutomationTestingProgram.InformationObject.EnvVar,System.String}
      description: The parsed parameters.
    content.vb: Function ParseParameters(testArgs As String, dataFile As String) As Dictionary(Of InformationObject.EnvVar, String)
  overload: AutomationTestingProgram.GeneralData.ITestGeneralData.ParseParameters*
references:
- uid: AutomationTestingProgram.GeneralData
  commentId: N:AutomationTestingProgram.GeneralData
  name: AutomationTestingProgram.GeneralData
  nameWithType: AutomationTestingProgram.GeneralData
  fullName: AutomationTestingProgram.GeneralData
- uid: AutomationTestingProgram.GeneralData.ITestGeneralData.Name*
  commentId: Overload:AutomationTestingProgram.GeneralData.ITestGeneralData.Name
  name: Name
  nameWithType: ITestGeneralData.Name
  fullName: AutomationTestingProgram.GeneralData.ITestGeneralData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutomationTestingProgram.GeneralData.ITestGeneralData.Verify*
  commentId: Overload:AutomationTestingProgram.GeneralData.ITestGeneralData.Verify
  name: Verify
  nameWithType: ITestGeneralData.Verify
  fullName: AutomationTestingProgram.GeneralData.ITestGeneralData.Verify
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AutomationTestingProgram.GeneralData.ITestGeneralData.ParseParameters*
  commentId: Overload:AutomationTestingProgram.GeneralData.ITestGeneralData.ParseParameters
  name: ParseParameters
  nameWithType: ITestGeneralData.ParseParameters
  fullName: AutomationTestingProgram.GeneralData.ITestGeneralData.ParseParameters
- uid: System.Collections.Generic.Dictionary{AutomationTestingProgram.InformationObject.EnvVar,System.String}
  commentId: T:System.Collections.Generic.Dictionary{AutomationTestingProgram.InformationObject.EnvVar,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<InformationObject.EnvVar, String>
  nameWithType: Dictionary<InformationObject.EnvVar, String>
  fullName: System.Collections.Generic.Dictionary<AutomationTestingProgram.InformationObject.EnvVar, System.String>
  nameWithType.vb: Dictionary(Of InformationObject.EnvVar, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of AutomationTestingProgram.InformationObject.EnvVar, System.String)
  name.vb: Dictionary(Of InformationObject.EnvVar, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AutomationTestingProgram.InformationObject.EnvVar
    name: InformationObject.EnvVar
    nameWithType: InformationObject.EnvVar
    fullName: AutomationTestingProgram.InformationObject.EnvVar
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AutomationTestingProgram.InformationObject.EnvVar
    name: InformationObject.EnvVar
    nameWithType: InformationObject.EnvVar
    fullName: AutomationTestingProgram.InformationObject.EnvVar
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
