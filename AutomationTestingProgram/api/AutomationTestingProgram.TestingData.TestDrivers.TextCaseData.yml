### YamlMime:ManagedReference
items:
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  commentId: T:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  id: TextCaseData
  parent: AutomationTestingProgram.TestingData.TestDrivers
  children:
  - AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.#ctor(System.String)
  - AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.ExistNextTestStep
  - AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.GetNextTestStep
  - AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.Name
  - AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUp
  - AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUpTestCase(System.String,System.Boolean)
  - AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TestArgs
  langs:
  - csharp
  - vb
  name: TextCaseData
  nameWithType: TextCaseData
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  type: Class
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/TextCaseData.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: TextCaseData
    path: src/TestingData/TestDrivers/TextCaseData.cs
    startLine: 18
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData.TestDrivers
  summary: "\nNot a good impentation to read test cases from text file.\nOnly used for proof of concept.\n"
  example: []
  syntax:
    content: 'public class TextCaseData : ITestCaseData, ITestData'
    content.vb: >-
      Public Class TextCaseData
          Implements ITestCaseData, ITestData
  inheritance:
  - System.Object
  implements:
  - AutomationTestingProgram.TestingData.ITestCaseData
  - AutomationTestingProgram.TestingData.ITestData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.#ctor(System.String)
  commentId: M:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  langs:
  - csharp
  - vb
  name: TextCaseData(String)
  nameWithType: TextCaseData.TextCaseData(String)
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TextCaseData(System.String)
  type: Constructor
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/TextCaseData.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: .ctor
    path: src/TestingData/TestDrivers/TextCaseData.cs
    startLine: 25
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData.TestDrivers
  summary: "\nInitializes a new instance of the <xref href=\"AutomationTestingProgram.TestingData.TestDrivers.TextCaseData\" data-throw-if-not-resolved=\"false\"></xref> class.\nAn implementation of the TestCaseData for txt files.\n"
  example: []
  syntax:
    content: public TextCaseData(string textLocation)
    parameters:
    - id: textLocation
      type: System.String
      description: The location of the txt file containing all the test cases.
    content.vb: Public Sub New(textLocation As String)
  overload: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TestArgs
  commentId: P:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TestArgs
  id: TestArgs
  parent: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  langs:
  - csharp
  - vb
  name: TestArgs
  nameWithType: TextCaseData.TestArgs
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TestArgs
  type: Property
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/TextCaseData.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: TestArgs
    path: src/TestingData/TestDrivers/TextCaseData.cs
    startLine: 31
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData.TestDrivers
  summary: "\nGets or sets the arguments for the test data. Often the file location.\nYou need to create a constructor that passes in a string/\nThis is where you get the test args.\n"
  example: []
  syntax:
    content: public string TestArgs { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TestArgs As String
  overload: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TestArgs*
  implements:
  - AutomationTestingProgram.TestingData.ITestData.TestArgs
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.Name
  commentId: P:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.Name
  id: Name
  parent: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TextCaseData.Name
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.Name
  type: Property
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/TextCaseData.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: Name
    path: src/TestingData/TestDrivers/TextCaseData.cs
    startLine: 34
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData.TestDrivers
  summary: "\nGets the name to be found by the reflective getter.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.Name*
  implements:
  - AutomationTestingProgram.TestingData.ITestData.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUp
  commentId: M:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUp
  id: SetUp
  parent: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: TextCaseData.SetUp()
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUp()
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/TextCaseData.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: SetUp
    path: src/TestingData/TestDrivers/TextCaseData.cs
    startLine: 41
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData.TestDrivers
  summary: "\nSince The constructor is called through reflective getter,\nany errors during the constructor caused by wrong arguments,\nwill cause the program to crash. Run here instead,\nAs this guarnetees that the right test set/case/step is ran.\n"
  example: []
  syntax:
    content: public void SetUp()
    content.vb: Public Sub SetUp
  overload: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUp*
  implements:
  - AutomationTestingProgram.TestingData.ITestData.SetUp
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.ExistNextTestStep
  commentId: M:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.ExistNextTestStep
  id: ExistNextTestStep
  parent: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  langs:
  - csharp
  - vb
  name: ExistNextTestStep()
  nameWithType: TextCaseData.ExistNextTestStep()
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.ExistNextTestStep()
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/TextCaseData.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: ExistNextTestStep
    path: src/TestingData/TestDrivers/TextCaseData.cs
    startLine: 46
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData.TestDrivers
  summary: "\nSees if there is a next test step. Usually needs to call the InformationObject.TestStepData.SetUpTestSet.\n"
  example: []
  syntax:
    content: public bool ExistNextTestStep()
    return:
      type: System.Boolean
      description: Returns true if there is another test Step.
    content.vb: Public Function ExistNextTestStep As Boolean
  overload: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.ExistNextTestStep*
  implements:
  - AutomationTestingProgram.TestingData.ITestCaseData.ExistNextTestStep
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.GetNextTestStep
  commentId: M:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.GetNextTestStep
  id: GetNextTestStep
  parent: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  langs:
  - csharp
  - vb
  name: GetNextTestStep()
  nameWithType: TextCaseData.GetNextTestStep()
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.GetNextTestStep()
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/TextCaseData.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: GetNextTestStep
    path: src/TestingData/TestDrivers/TextCaseData.cs
    startLine: 52
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData.TestDrivers
  summary: "\nGets the next Test Step.\n"
  example: []
  syntax:
    content: public ITestStep GetNextTestStep()
    return:
      type: AutomationTestSetFramework.ITestStep
      description: The next Test Step.
    content.vb: Public Function GetNextTestStep As ITestStep
  overload: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.GetNextTestStep*
  implements:
  - AutomationTestingProgram.TestingData.ITestCaseData.GetNextTestStep
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUpTestCase(System.String,System.Boolean)
  commentId: M:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUpTestCase(System.String,System.Boolean)
  id: SetUpTestCase(System.String,System.Boolean)
  parent: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  langs:
  - csharp
  - vb
  name: SetUpTestCase(String, Boolean)
  nameWithType: TextCaseData.SetUpTestCase(String, Boolean)
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUpTestCase(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/TextCaseData.cs
      branch: development
      repo: https://github.com/zzzrst/AutomationTestingProgram.git
    id: SetUpTestCase
    path: src/TestingData/TestDrivers/TextCaseData.cs
    startLine: 61
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData.TestDrivers
  summary: "\nSet up and returns the new test case.\n"
  example: []
  syntax:
    content: public ITestCase SetUpTestCase(string txtFile, bool performAction = true)
    parameters:
    - id: txtFile
      type: System.String
    - id: performAction
      type: System.Boolean
      description: Determins if the test case should run.
    return:
      type: AutomationTestSetFramework.ITestCase
      description: The test Case to run.
    content.vb: Public Function SetUpTestCase(txtFile As String, performAction As Boolean = True) As ITestCase
  overload: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUpTestCase*
  implements:
  - AutomationTestingProgram.TestingData.ITestCaseData.SetUpTestCase(System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutomationTestingProgram.TestingData.TestDrivers
  commentId: N:AutomationTestingProgram.TestingData.TestDrivers
  name: AutomationTestingProgram.TestingData.TestDrivers
  nameWithType: AutomationTestingProgram.TestingData.TestDrivers
  fullName: AutomationTestingProgram.TestingData.TestDrivers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutomationTestingProgram.TestingData.ITestCaseData
  commentId: T:AutomationTestingProgram.TestingData.ITestCaseData
  parent: AutomationTestingProgram.TestingData
  name: ITestCaseData
  nameWithType: ITestCaseData
  fullName: AutomationTestingProgram.TestingData.ITestCaseData
- uid: AutomationTestingProgram.TestingData.ITestData
  commentId: T:AutomationTestingProgram.TestingData.ITestData
  parent: AutomationTestingProgram.TestingData
  name: ITestData
  nameWithType: ITestData
  fullName: AutomationTestingProgram.TestingData.ITestData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutomationTestingProgram.TestingData
  commentId: N:AutomationTestingProgram.TestingData
  name: AutomationTestingProgram.TestingData
  nameWithType: AutomationTestingProgram.TestingData
  fullName: AutomationTestingProgram.TestingData
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  commentId: T:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
  name: TextCaseData
  nameWithType: TextCaseData
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.#ctor*
  commentId: Overload:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.#ctor
  name: TextCaseData
  nameWithType: TextCaseData.TextCaseData
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TextCaseData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TestArgs*
  commentId: Overload:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TestArgs
  name: TestArgs
  nameWithType: TextCaseData.TestArgs
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.TestArgs
- uid: AutomationTestingProgram.TestingData.ITestData.TestArgs
  commentId: P:AutomationTestingProgram.TestingData.ITestData.TestArgs
  parent: AutomationTestingProgram.TestingData.ITestData
  name: TestArgs
  nameWithType: ITestData.TestArgs
  fullName: AutomationTestingProgram.TestingData.ITestData.TestArgs
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.Name*
  commentId: Overload:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.Name
  name: Name
  nameWithType: TextCaseData.Name
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.Name
- uid: AutomationTestingProgram.TestingData.ITestData.Name
  commentId: P:AutomationTestingProgram.TestingData.ITestData.Name
  parent: AutomationTestingProgram.TestingData.ITestData
  name: Name
  nameWithType: ITestData.Name
  fullName: AutomationTestingProgram.TestingData.ITestData.Name
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUp*
  commentId: Overload:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUp
  name: SetUp
  nameWithType: TextCaseData.SetUp
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUp
- uid: AutomationTestingProgram.TestingData.ITestData.SetUp
  commentId: M:AutomationTestingProgram.TestingData.ITestData.SetUp
  parent: AutomationTestingProgram.TestingData.ITestData
  name: SetUp()
  nameWithType: ITestData.SetUp()
  fullName: AutomationTestingProgram.TestingData.ITestData.SetUp()
  spec.csharp:
  - uid: AutomationTestingProgram.TestingData.ITestData.SetUp
    name: SetUp
    nameWithType: ITestData.SetUp
    fullName: AutomationTestingProgram.TestingData.ITestData.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomationTestingProgram.TestingData.ITestData.SetUp
    name: SetUp
    nameWithType: ITestData.SetUp
    fullName: AutomationTestingProgram.TestingData.ITestData.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.ExistNextTestStep*
  commentId: Overload:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.ExistNextTestStep
  name: ExistNextTestStep
  nameWithType: TextCaseData.ExistNextTestStep
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.ExistNextTestStep
- uid: AutomationTestingProgram.TestingData.ITestCaseData.ExistNextTestStep
  commentId: M:AutomationTestingProgram.TestingData.ITestCaseData.ExistNextTestStep
  parent: AutomationTestingProgram.TestingData.ITestCaseData
  name: ExistNextTestStep()
  nameWithType: ITestCaseData.ExistNextTestStep()
  fullName: AutomationTestingProgram.TestingData.ITestCaseData.ExistNextTestStep()
  spec.csharp:
  - uid: AutomationTestingProgram.TestingData.ITestCaseData.ExistNextTestStep
    name: ExistNextTestStep
    nameWithType: ITestCaseData.ExistNextTestStep
    fullName: AutomationTestingProgram.TestingData.ITestCaseData.ExistNextTestStep
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomationTestingProgram.TestingData.ITestCaseData.ExistNextTestStep
    name: ExistNextTestStep
    nameWithType: ITestCaseData.ExistNextTestStep
    fullName: AutomationTestingProgram.TestingData.ITestCaseData.ExistNextTestStep
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.GetNextTestStep*
  commentId: Overload:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.GetNextTestStep
  name: GetNextTestStep
  nameWithType: TextCaseData.GetNextTestStep
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.GetNextTestStep
- uid: AutomationTestingProgram.TestingData.ITestCaseData.GetNextTestStep
  commentId: M:AutomationTestingProgram.TestingData.ITestCaseData.GetNextTestStep
  parent: AutomationTestingProgram.TestingData.ITestCaseData
  name: GetNextTestStep()
  nameWithType: ITestCaseData.GetNextTestStep()
  fullName: AutomationTestingProgram.TestingData.ITestCaseData.GetNextTestStep()
  spec.csharp:
  - uid: AutomationTestingProgram.TestingData.ITestCaseData.GetNextTestStep
    name: GetNextTestStep
    nameWithType: ITestCaseData.GetNextTestStep
    fullName: AutomationTestingProgram.TestingData.ITestCaseData.GetNextTestStep
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomationTestingProgram.TestingData.ITestCaseData.GetNextTestStep
    name: GetNextTestStep
    nameWithType: ITestCaseData.GetNextTestStep
    fullName: AutomationTestingProgram.TestingData.ITestCaseData.GetNextTestStep
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomationTestSetFramework.ITestStep
  commentId: T:AutomationTestSetFramework.ITestStep
  parent: AutomationTestSetFramework
  isExternal: true
  name: ITestStep
  nameWithType: ITestStep
  fullName: AutomationTestSetFramework.ITestStep
- uid: AutomationTestSetFramework
  commentId: N:AutomationTestSetFramework
  isExternal: true
  name: AutomationTestSetFramework
  nameWithType: AutomationTestSetFramework
  fullName: AutomationTestSetFramework
- uid: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUpTestCase*
  commentId: Overload:AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUpTestCase
  name: SetUpTestCase
  nameWithType: TextCaseData.SetUpTestCase
  fullName: AutomationTestingProgram.TestingData.TestDrivers.TextCaseData.SetUpTestCase
- uid: AutomationTestingProgram.TestingData.ITestCaseData.SetUpTestCase(System.String,System.Boolean)
  commentId: M:AutomationTestingProgram.TestingData.ITestCaseData.SetUpTestCase(System.String,System.Boolean)
  parent: AutomationTestingProgram.TestingData.ITestCaseData
  isExternal: true
  name: SetUpTestCase(String, Boolean)
  nameWithType: ITestCaseData.SetUpTestCase(String, Boolean)
  fullName: AutomationTestingProgram.TestingData.ITestCaseData.SetUpTestCase(System.String, System.Boolean)
  spec.csharp:
  - uid: AutomationTestingProgram.TestingData.ITestCaseData.SetUpTestCase(System.String,System.Boolean)
    name: SetUpTestCase
    nameWithType: ITestCaseData.SetUpTestCase
    fullName: AutomationTestingProgram.TestingData.ITestCaseData.SetUpTestCase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomationTestingProgram.TestingData.ITestCaseData.SetUpTestCase(System.String,System.Boolean)
    name: SetUpTestCase
    nameWithType: ITestCaseData.SetUpTestCase
    fullName: AutomationTestingProgram.TestingData.ITestCaseData.SetUpTestCase
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomationTestSetFramework.ITestCase
  commentId: T:AutomationTestSetFramework.ITestCase
  parent: AutomationTestSetFramework
  isExternal: true
  name: ITestCase
  nameWithType: ITestCase
  fullName: AutomationTestSetFramework.ITestCase
