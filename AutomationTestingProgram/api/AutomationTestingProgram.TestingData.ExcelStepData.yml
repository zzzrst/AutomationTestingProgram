### YamlMime:ManagedReference
items:
- uid: AutomationTestingProgram.TestingData.ExcelStepData
  commentId: T:AutomationTestingProgram.TestingData.ExcelStepData
  id: ExcelStepData
  parent: AutomationTestingProgram.TestingData
  children:
  - AutomationTestingProgram.TestingData.ExcelStepData.#ctor(System.String)
  - AutomationTestingProgram.TestingData.ExcelStepData.QueryObjectAndArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  - AutomationTestingProgram.TestingData.ExcelStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  - AutomationTestingProgram.TestingData.ExcelStepData.SetUpTestStep(System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: ExcelStepData
  nameWithType: ExcelStepData
  fullName: AutomationTestingProgram.TestingData.ExcelStepData
  type: Class
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/ExcelStepData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: ExcelStepData
    path: src/TestingData/TestDrivers/ExcelStepData.cs
    startLine: 17
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData
  summary: "\nThe interface to get the test step data.\n"
  example: []
  syntax:
    content: 'public class ExcelStepData : ExcelData, ITestStepData, ITestData'
    content.vb: >-
      Public Class ExcelStepData
          Inherits ExcelData
          Implements ITestStepData, ITestData
  inheritance:
  - System.Object
  - AutomationTestingProgram.TestingData.ExcelData
  implements:
  - AutomationTestingProgram.TestingData.ITestStepData
  - AutomationTestingProgram.TestingData.ITestData
  inheritedMembers:
  - AutomationTestingProgram.TestingData.ExcelData.TestArgs
  - AutomationTestingProgram.TestingData.ExcelData.Name
  - AutomationTestingProgram.TestingData.ExcelData.RowIndex
  - AutomationTestingProgram.TestingData.ExcelData.TestCaseStartIndex
  - AutomationTestingProgram.TestingData.ExcelData.ExcelFile
  - AutomationTestingProgram.TestingData.ExcelData.TestSetSheet
  - AutomationTestingProgram.TestingData.ExcelData.User
  - AutomationTestingProgram.TestingData.ExcelData.SetUp
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AutomationTestingProgram.TestingData.ExcelStepData.#ctor(System.String)
  commentId: M:AutomationTestingProgram.TestingData.ExcelStepData.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: AutomationTestingProgram.TestingData.ExcelStepData
  langs:
  - csharp
  - vb
  name: ExcelStepData(String)
  nameWithType: ExcelStepData.ExcelStepData(String)
  fullName: AutomationTestingProgram.TestingData.ExcelStepData.ExcelStepData(System.String)
  type: Constructor
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/ExcelStepData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: .ctor
    path: src/TestingData/TestDrivers/ExcelStepData.cs
    startLine: 23
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData
  summary: "\nInitializes a new instance of the <xref href=\"AutomationTestingProgram.TestingData.ExcelStepData\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ExcelStepData(string args)
    parameters:
    - id: args
      type: System.String
      description: The arguments to be passed in.
    content.vb: Public Sub New(args As String)
  overload: AutomationTestingProgram.TestingData.ExcelStepData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestingData.ExcelStepData.SetUpTestStep(System.String,System.Boolean)
  commentId: M:AutomationTestingProgram.TestingData.ExcelStepData.SetUpTestStep(System.String,System.Boolean)
  id: SetUpTestStep(System.String,System.Boolean)
  parent: AutomationTestingProgram.TestingData.ExcelStepData
  langs:
  - csharp
  - vb
  name: SetUpTestStep(String, Boolean)
  nameWithType: ExcelStepData.SetUpTestStep(String, Boolean)
  fullName: AutomationTestingProgram.TestingData.ExcelStepData.SetUpTestStep(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/ExcelStepData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: SetUpTestStep
    path: src/TestingData/TestDrivers/ExcelStepData.cs
    startLine: 34
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData
  summary: "\nRuns when getting the test step from the test case.\n"
  example: []
  syntax:
    content: public ITestStep SetUpTestStep(string testStepName, bool performAction = true)
    parameters:
    - id: testStepName
      type: System.String
      description: The name of the test Step.
    - id: performAction
      type: System.Boolean
      description: Determins if the test step should run.
    return:
      type: AutomationTestSetFramework.ITestStep
      description: The Test Step to run.
    content.vb: Public Function SetUpTestStep(testStepName As String, performAction As Boolean = True) As ITestStep
  overload: AutomationTestingProgram.TestingData.ExcelStepData.SetUpTestStep*
  implements:
  - AutomationTestingProgram.TestingData.ITestStepData.SetUpTestStep(System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestingData.ExcelStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  commentId: M:AutomationTestingProgram.TestingData.ExcelStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  id: SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  parent: AutomationTestingProgram.TestingData.ExcelStepData
  langs:
  - csharp
  - vb
  name: SetArguments(TestStep)
  nameWithType: ExcelStepData.SetArguments(TestStep)
  fullName: AutomationTestingProgram.TestingData.ExcelStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/ExcelStepData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: SetArguments
    path: src/TestingData/TestDrivers/ExcelStepData.cs
    startLine: 43
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData
  summary: "\nSets any arguments at runtime.\n"
  example: []
  syntax:
    content: public void SetArguments(TestStep testStep)
    parameters:
    - id: testStep
      type: AutomationTestingProgram.AutomationFramework.TestStep
      description: Test steps to get the arguments for.
    content.vb: Public Sub SetArguments(testStep As TestStep)
  overload: AutomationTestingProgram.TestingData.ExcelStepData.SetArguments*
  implements:
  - AutomationTestingProgram.TestingData.ITestStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AutomationTestingProgram.TestingData.ExcelStepData.QueryObjectAndArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  commentId: M:AutomationTestingProgram.TestingData.ExcelStepData.QueryObjectAndArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  id: QueryObjectAndArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  parent: AutomationTestingProgram.TestingData.ExcelStepData
  langs:
  - csharp
  - vb
  name: QueryObjectAndArguments(TestStep)
  nameWithType: ExcelStepData.QueryObjectAndArguments(TestStep)
  fullName: AutomationTestingProgram.TestingData.ExcelStepData.QueryObjectAndArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/TestingData/TestDrivers/ExcelStepData.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: QueryObjectAndArguments
    path: src/TestingData/TestDrivers/ExcelStepData.cs
    startLine: 56
  assemblies:
  - AutomationTestingProgram
  namespace: AutomationTestingProgram.TestingData
  summary: "\nIf object identifier or arguments begin with special characters in [&apos;!&apos;, &apos;@&apos;, &apos;##&apos;, &apos;$$&apos;], then\nthey are replaced by their respective value in the database.\n"
  example: []
  syntax:
    content: public void QueryObjectAndArguments(TestStep testStep)
    parameters:
    - id: testStep
      type: AutomationTestingProgram.AutomationFramework.TestStep
      description: The Test step to query arguments.
    content.vb: Public Sub QueryObjectAndArguments(testStep As TestStep)
  overload: AutomationTestingProgram.TestingData.ExcelStepData.QueryObjectAndArguments*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AutomationTestingProgram.TestingData
  commentId: N:AutomationTestingProgram.TestingData
  name: AutomationTestingProgram.TestingData
  nameWithType: AutomationTestingProgram.TestingData
  fullName: AutomationTestingProgram.TestingData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AutomationTestingProgram.TestingData.ExcelData
  commentId: T:AutomationTestingProgram.TestingData.ExcelData
  parent: AutomationTestingProgram.TestingData
  name: ExcelData
  nameWithType: ExcelData
  fullName: AutomationTestingProgram.TestingData.ExcelData
- uid: AutomationTestingProgram.TestingData.ITestStepData
  commentId: T:AutomationTestingProgram.TestingData.ITestStepData
  parent: AutomationTestingProgram.TestingData
  name: ITestStepData
  nameWithType: ITestStepData
  fullName: AutomationTestingProgram.TestingData.ITestStepData
- uid: AutomationTestingProgram.TestingData.ITestData
  commentId: T:AutomationTestingProgram.TestingData.ITestData
  parent: AutomationTestingProgram.TestingData
  name: ITestData
  nameWithType: ITestData
  fullName: AutomationTestingProgram.TestingData.ITestData
- uid: AutomationTestingProgram.TestingData.ExcelData.TestArgs
  commentId: P:AutomationTestingProgram.TestingData.ExcelData.TestArgs
  parent: AutomationTestingProgram.TestingData.ExcelData
  name: TestArgs
  nameWithType: ExcelData.TestArgs
  fullName: AutomationTestingProgram.TestingData.ExcelData.TestArgs
- uid: AutomationTestingProgram.TestingData.ExcelData.Name
  commentId: P:AutomationTestingProgram.TestingData.ExcelData.Name
  parent: AutomationTestingProgram.TestingData.ExcelData
  name: Name
  nameWithType: ExcelData.Name
  fullName: AutomationTestingProgram.TestingData.ExcelData.Name
- uid: AutomationTestingProgram.TestingData.ExcelData.RowIndex
  commentId: P:AutomationTestingProgram.TestingData.ExcelData.RowIndex
  parent: AutomationTestingProgram.TestingData.ExcelData
  name: RowIndex
  nameWithType: ExcelData.RowIndex
  fullName: AutomationTestingProgram.TestingData.ExcelData.RowIndex
- uid: AutomationTestingProgram.TestingData.ExcelData.TestCaseStartIndex
  commentId: P:AutomationTestingProgram.TestingData.ExcelData.TestCaseStartIndex
  parent: AutomationTestingProgram.TestingData.ExcelData
  name: TestCaseStartIndex
  nameWithType: ExcelData.TestCaseStartIndex
  fullName: AutomationTestingProgram.TestingData.ExcelData.TestCaseStartIndex
- uid: AutomationTestingProgram.TestingData.ExcelData.ExcelFile
  commentId: P:AutomationTestingProgram.TestingData.ExcelData.ExcelFile
  parent: AutomationTestingProgram.TestingData.ExcelData
  name: ExcelFile
  nameWithType: ExcelData.ExcelFile
  fullName: AutomationTestingProgram.TestingData.ExcelData.ExcelFile
- uid: AutomationTestingProgram.TestingData.ExcelData.TestSetSheet
  commentId: P:AutomationTestingProgram.TestingData.ExcelData.TestSetSheet
  parent: AutomationTestingProgram.TestingData.ExcelData
  name: TestSetSheet
  nameWithType: ExcelData.TestSetSheet
  fullName: AutomationTestingProgram.TestingData.ExcelData.TestSetSheet
- uid: AutomationTestingProgram.TestingData.ExcelData.User
  commentId: P:AutomationTestingProgram.TestingData.ExcelData.User
  parent: AutomationTestingProgram.TestingData.ExcelData
  name: User
  nameWithType: ExcelData.User
  fullName: AutomationTestingProgram.TestingData.ExcelData.User
- uid: AutomationTestingProgram.TestingData.ExcelData.SetUp
  commentId: M:AutomationTestingProgram.TestingData.ExcelData.SetUp
  parent: AutomationTestingProgram.TestingData.ExcelData
  name: SetUp()
  nameWithType: ExcelData.SetUp()
  fullName: AutomationTestingProgram.TestingData.ExcelData.SetUp()
  spec.csharp:
  - uid: AutomationTestingProgram.TestingData.ExcelData.SetUp
    name: SetUp
    nameWithType: ExcelData.SetUp
    fullName: AutomationTestingProgram.TestingData.ExcelData.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomationTestingProgram.TestingData.ExcelData.SetUp
    name: SetUp
    nameWithType: ExcelData.SetUp
    fullName: AutomationTestingProgram.TestingData.ExcelData.SetUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AutomationTestingProgram.TestingData.ExcelStepData
  commentId: T:AutomationTestingProgram.TestingData.ExcelStepData
  name: ExcelStepData
  nameWithType: ExcelStepData
  fullName: AutomationTestingProgram.TestingData.ExcelStepData
- uid: AutomationTestingProgram.TestingData.ExcelStepData.#ctor*
  commentId: Overload:AutomationTestingProgram.TestingData.ExcelStepData.#ctor
  name: ExcelStepData
  nameWithType: ExcelStepData.ExcelStepData
  fullName: AutomationTestingProgram.TestingData.ExcelStepData.ExcelStepData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AutomationTestingProgram.TestingData.ExcelStepData.SetUpTestStep*
  commentId: Overload:AutomationTestingProgram.TestingData.ExcelStepData.SetUpTestStep
  name: SetUpTestStep
  nameWithType: ExcelStepData.SetUpTestStep
  fullName: AutomationTestingProgram.TestingData.ExcelStepData.SetUpTestStep
- uid: AutomationTestingProgram.TestingData.ITestStepData.SetUpTestStep(System.String,System.Boolean)
  commentId: M:AutomationTestingProgram.TestingData.ITestStepData.SetUpTestStep(System.String,System.Boolean)
  parent: AutomationTestingProgram.TestingData.ITestStepData
  isExternal: true
  name: SetUpTestStep(String, Boolean)
  nameWithType: ITestStepData.SetUpTestStep(String, Boolean)
  fullName: AutomationTestingProgram.TestingData.ITestStepData.SetUpTestStep(System.String, System.Boolean)
  spec.csharp:
  - uid: AutomationTestingProgram.TestingData.ITestStepData.SetUpTestStep(System.String,System.Boolean)
    name: SetUpTestStep
    nameWithType: ITestStepData.SetUpTestStep
    fullName: AutomationTestingProgram.TestingData.ITestStepData.SetUpTestStep
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomationTestingProgram.TestingData.ITestStepData.SetUpTestStep(System.String,System.Boolean)
    name: SetUpTestStep
    nameWithType: ITestStepData.SetUpTestStep
    fullName: AutomationTestingProgram.TestingData.ITestStepData.SetUpTestStep
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AutomationTestSetFramework.ITestStep
  commentId: T:AutomationTestSetFramework.ITestStep
  parent: AutomationTestSetFramework
  isExternal: true
  name: ITestStep
  nameWithType: ITestStep
  fullName: AutomationTestSetFramework.ITestStep
- uid: AutomationTestSetFramework
  commentId: N:AutomationTestSetFramework
  isExternal: true
  name: AutomationTestSetFramework
  nameWithType: AutomationTestSetFramework
  fullName: AutomationTestSetFramework
- uid: AutomationTestingProgram.TestingData.ExcelStepData.SetArguments*
  commentId: Overload:AutomationTestingProgram.TestingData.ExcelStepData.SetArguments
  name: SetArguments
  nameWithType: ExcelStepData.SetArguments
  fullName: AutomationTestingProgram.TestingData.ExcelStepData.SetArguments
- uid: AutomationTestingProgram.TestingData.ITestStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  commentId: M:AutomationTestingProgram.TestingData.ITestStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  parent: AutomationTestingProgram.TestingData.ITestStepData
  name: SetArguments(TestStep)
  nameWithType: ITestStepData.SetArguments(TestStep)
  fullName: AutomationTestingProgram.TestingData.ITestStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
  spec.csharp:
  - uid: AutomationTestingProgram.TestingData.ITestStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
    name: SetArguments
    nameWithType: ITestStepData.SetArguments
    fullName: AutomationTestingProgram.TestingData.ITestStepData.SetArguments
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutomationTestingProgram.AutomationFramework.TestStep
    name: TestStep
    nameWithType: TestStep
    fullName: AutomationTestingProgram.AutomationFramework.TestStep
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AutomationTestingProgram.TestingData.ITestStepData.SetArguments(AutomationTestingProgram.AutomationFramework.TestStep)
    name: SetArguments
    nameWithType: ITestStepData.SetArguments
    fullName: AutomationTestingProgram.TestingData.ITestStepData.SetArguments
  - name: (
    nameWithType: (
    fullName: (
  - uid: AutomationTestingProgram.AutomationFramework.TestStep
    name: TestStep
    nameWithType: TestStep
    fullName: AutomationTestingProgram.AutomationFramework.TestStep
  - name: )
    nameWithType: )
    fullName: )
- uid: AutomationTestingProgram.AutomationFramework.TestStep
  commentId: T:AutomationTestingProgram.AutomationFramework.TestStep
  parent: AutomationTestingProgram.AutomationFramework
  name: TestStep
  nameWithType: TestStep
  fullName: AutomationTestingProgram.AutomationFramework.TestStep
- uid: AutomationTestingProgram.AutomationFramework
  commentId: N:AutomationTestingProgram.AutomationFramework
  name: AutomationTestingProgram.AutomationFramework
  nameWithType: AutomationTestingProgram.AutomationFramework
  fullName: AutomationTestingProgram.AutomationFramework
- uid: AutomationTestingProgram.TestingData.ExcelStepData.QueryObjectAndArguments*
  commentId: Overload:AutomationTestingProgram.TestingData.ExcelStepData.QueryObjectAndArguments
  name: QueryObjectAndArguments
  nameWithType: ExcelStepData.QueryObjectAndArguments
  fullName: AutomationTestingProgram.TestingData.ExcelStepData.QueryObjectAndArguments
