### YamlMime:ManagedReference
items:
- uid: AzureReporter.TestCaseInstance
  commentId: T:AzureReporter.TestCaseInstance
  id: TestCaseInstance
  parent: AzureReporter
  children:
  - AzureReporter.TestCaseInstance.#ctor(System.String,System.String,System.String)
  - AzureReporter.TestCaseInstance.CreateTestCaseReference
  - AzureReporter.TestCaseInstance.CreateTestCaseUsingClientLib(System.String,System.Int32,System.String)
  - AzureReporter.TestCaseInstance.CreateTestStep(System.String,System.String,System.String)
  - AzureReporter.TestCaseInstance.QueryForTestCase(System.String)
  - AzureReporter.TestCaseInstance.QueryForTestCaseFaster(System.String)
  - AzureReporter.TestCaseInstance.SaveTestCaseSteps(System.String)
  - AzureReporter.TestCaseInstance.testCaseList
  langs:
  - csharp
  - vb
  name: TestCaseInstance
  nameWithType: TestCaseInstance
  fullName: AzureReporter.TestCaseInstance
  type: Class
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: TestCaseInstance
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 22
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  syntax:
    content: public class TestCaseInstance
    content.vb: Public Class TestCaseInstance
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AzureReporter.TestCaseInstance.testCaseList
  commentId: F:AzureReporter.TestCaseInstance.testCaseList
  id: testCaseList
  parent: AzureReporter.TestCaseInstance
  langs:
  - csharp
  - vb
  name: testCaseList
  nameWithType: TestCaseInstance.testCaseList
  fullName: AzureReporter.TestCaseInstance.testCaseList
  type: Field
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: testCaseList
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 30
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  syntax:
    content: public List<string> testCaseList
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public testCaseList As List(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AzureReporter.TestCaseInstance.#ctor(System.String,System.String,System.String)
  commentId: M:AzureReporter.TestCaseInstance.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: AzureReporter.TestCaseInstance
  langs:
  - csharp
  - vb
  name: TestCaseInstance(String, String, String)
  nameWithType: TestCaseInstance.TestCaseInstance(String, String, String)
  fullName: AzureReporter.TestCaseInstance.TestCaseInstance(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: .ctor
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 34
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  syntax:
    content: public TestCaseInstance(string url, string pat, string project)
    parameters:
    - id: url
      type: System.String
    - id: pat
      type: System.String
    - id: project
      type: System.String
    content.vb: Public Sub New(url As String, pat As String, project As String)
  overload: AzureReporter.TestCaseInstance.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AzureReporter.TestCaseInstance.CreateTestCaseReference
  commentId: M:AzureReporter.TestCaseInstance.CreateTestCaseReference
  id: CreateTestCaseReference
  parent: AzureReporter.TestCaseInstance
  langs:
  - csharp
  - vb
  name: CreateTestCaseReference()
  nameWithType: TestCaseInstance.CreateTestCaseReference()
  fullName: AzureReporter.TestCaseInstance.CreateTestCaseReference()
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: CreateTestCaseReference
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 46
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  summary: "\nCreate a new test step for test cases that are already created and that we don&apos;t need to create using a client library.\n"
  example: []
  syntax:
    content: public void CreateTestCaseReference()
    content.vb: Public Sub CreateTestCaseReference
  overload: AzureReporter.TestCaseInstance.CreateTestCaseReference*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AzureReporter.TestCaseInstance.CreateTestCaseUsingClientLib(System.String,System.Int32,System.String)
  commentId: M:AzureReporter.TestCaseInstance.CreateTestCaseUsingClientLib(System.String,System.Int32,System.String)
  id: CreateTestCaseUsingClientLib(System.String,System.Int32,System.String)
  parent: AzureReporter.TestCaseInstance
  langs:
  - csharp
  - vb
  name: CreateTestCaseUsingClientLib(String, Int32, String)
  nameWithType: TestCaseInstance.CreateTestCaseUsingClientLib(String, Int32, String)
  fullName: AzureReporter.TestCaseInstance.CreateTestCaseUsingClientLib(System.String, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: CreateTestCaseUsingClientLib
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 58
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  summary: "\nCreate a bug using the .NET client library\nTakes in a paramter for the test case name that we will create\n"
  example: []
  syntax:
    content: public void CreateTestCaseUsingClientLib(string testCaseName, int priority, string description)
    parameters:
    - id: testCaseName
      type: System.String
    - id: priority
      type: System.Int32
    - id: description
      type: System.String
    content.vb: Public Sub CreateTestCaseUsingClientLib(testCaseName As String, priority As Integer, description As String)
  overload: AzureReporter.TestCaseInstance.CreateTestCaseUsingClientLib*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AzureReporter.TestCaseInstance.CreateTestStep(System.String,System.String,System.String)
  commentId: M:AzureReporter.TestCaseInstance.CreateTestStep(System.String,System.String,System.String)
  id: CreateTestStep(System.String,System.String,System.String)
  parent: AzureReporter.TestCaseInstance
  langs:
  - csharp
  - vb
  name: CreateTestStep(String, String, String)
  nameWithType: TestCaseInstance.CreateTestStep(String, String, String)
  fullName: AzureReporter.TestCaseInstance.CreateTestStep(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: CreateTestStep
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 113
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  syntax:
    content: public void CreateTestStep(string title, string expected, string description)
    parameters:
    - id: title
      type: System.String
    - id: expected
      type: System.String
    - id: description
      type: System.String
    content.vb: Public Sub CreateTestStep(title As String, expected As String, description As String)
  overload: AzureReporter.TestCaseInstance.CreateTestStep*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AzureReporter.TestCaseInstance.SaveTestCaseSteps(System.String)
  commentId: M:AzureReporter.TestCaseInstance.SaveTestCaseSteps(System.String)
  id: SaveTestCaseSteps(System.String)
  parent: AzureReporter.TestCaseInstance
  langs:
  - csharp
  - vb
  name: SaveTestCaseSteps(String)
  nameWithType: TestCaseInstance.SaveTestCaseSteps(String)
  fullName: AzureReporter.TestCaseInstance.SaveTestCaseSteps(System.String)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: SaveTestCaseSteps
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 126
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  syntax:
    content: public string SaveTestCaseSteps(string testCaseId)
    parameters:
    - id: testCaseId
      type: System.String
    return:
      type: System.String
    content.vb: Public Function SaveTestCaseSteps(testCaseId As String) As String
  overload: AzureReporter.TestCaseInstance.SaveTestCaseSteps*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AzureReporter.TestCaseInstance.QueryForTestCaseFaster(System.String)
  commentId: M:AzureReporter.TestCaseInstance.QueryForTestCaseFaster(System.String)
  id: QueryForTestCaseFaster(System.String)
  parent: AzureReporter.TestCaseInstance
  langs:
  - csharp
  - vb
  name: QueryForTestCaseFaster(String)
  nameWithType: TestCaseInstance.QueryForTestCaseFaster(String)
  fullName: AzureReporter.TestCaseInstance.QueryForTestCaseFaster(System.String)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: QueryForTestCaseFaster
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 159
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  syntax:
    content: public string QueryForTestCaseFaster(string testCaseName)
    parameters:
    - id: testCaseName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function QueryForTestCaseFaster(testCaseName As String) As String
  overload: AzureReporter.TestCaseInstance.QueryForTestCaseFaster*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AzureReporter.TestCaseInstance.QueryForTestCase(System.String)
  commentId: M:AzureReporter.TestCaseInstance.QueryForTestCase(System.String)
  id: QueryForTestCase(System.String)
  parent: AzureReporter.TestCaseInstance
  langs:
  - csharp
  - vb
  name: QueryForTestCase(String)
  nameWithType: TestCaseInstance.QueryForTestCase(String)
  fullName: AzureReporter.TestCaseInstance.QueryForTestCase(System.String)
  type: Method
  source:
    remote:
      path: AutomationTestingProgram/src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
      branch: development
      repo: git@github.com:zzzrst/AutomationTestingProgram.git
    id: QueryForTestCase
    path: src/AutomationFramework/Loggers_and_Reporters/AzureReporter/TestCaseInstance.cs
    startLine: 224
  assemblies:
  - AutomationTestingProgram
  namespace: AzureReporter
  syntax:
    content: public string QueryForTestCase(string testCaseName)
    parameters:
    - id: testCaseName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function QueryForTestCase(testCaseName As String) As String
  overload: AzureReporter.TestCaseInstance.QueryForTestCase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AzureReporter
  commentId: N:AzureReporter
  name: AzureReporter
  nameWithType: AzureReporter
  fullName: AzureReporter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: AzureReporter.TestCaseInstance.#ctor*
  commentId: Overload:AzureReporter.TestCaseInstance.#ctor
  name: TestCaseInstance
  nameWithType: TestCaseInstance.TestCaseInstance
  fullName: AzureReporter.TestCaseInstance.TestCaseInstance
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AzureReporter.TestCaseInstance.CreateTestCaseReference*
  commentId: Overload:AzureReporter.TestCaseInstance.CreateTestCaseReference
  name: CreateTestCaseReference
  nameWithType: TestCaseInstance.CreateTestCaseReference
  fullName: AzureReporter.TestCaseInstance.CreateTestCaseReference
- uid: AzureReporter.TestCaseInstance.CreateTestCaseUsingClientLib*
  commentId: Overload:AzureReporter.TestCaseInstance.CreateTestCaseUsingClientLib
  name: CreateTestCaseUsingClientLib
  nameWithType: TestCaseInstance.CreateTestCaseUsingClientLib
  fullName: AzureReporter.TestCaseInstance.CreateTestCaseUsingClientLib
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AzureReporter.TestCaseInstance.CreateTestStep*
  commentId: Overload:AzureReporter.TestCaseInstance.CreateTestStep
  name: CreateTestStep
  nameWithType: TestCaseInstance.CreateTestStep
  fullName: AzureReporter.TestCaseInstance.CreateTestStep
- uid: AzureReporter.TestCaseInstance.SaveTestCaseSteps*
  commentId: Overload:AzureReporter.TestCaseInstance.SaveTestCaseSteps
  name: SaveTestCaseSteps
  nameWithType: TestCaseInstance.SaveTestCaseSteps
  fullName: AzureReporter.TestCaseInstance.SaveTestCaseSteps
- uid: AzureReporter.TestCaseInstance.QueryForTestCaseFaster*
  commentId: Overload:AzureReporter.TestCaseInstance.QueryForTestCaseFaster
  name: QueryForTestCaseFaster
  nameWithType: TestCaseInstance.QueryForTestCaseFaster
  fullName: AzureReporter.TestCaseInstance.QueryForTestCaseFaster
- uid: AzureReporter.TestCaseInstance.QueryForTestCase*
  commentId: Overload:AzureReporter.TestCaseInstance.QueryForTestCase
  name: QueryForTestCase
  nameWithType: TestCaseInstance.QueryForTestCase
  fullName: AzureReporter.TestCaseInstance.QueryForTestCase
